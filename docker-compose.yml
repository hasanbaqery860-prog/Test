version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: authentik
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: authentik
      TZ: ${TZ}
    volumes:
      - ak-postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Expose Postgres on a non-default host port, localhost only
    ports:
      - "127.0.0.1:${POSTGRES_HOST_PORT:-55432}:5432"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - ak-redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Expose Redis on a non-default host port, localhost only
    ports:
      - "127.0.0.1:${REDIS_HOST_PORT:-56379}:6379"

  authentik-server:
    image: ghcr.io/goauthentik/server:2024.6.3
    restart: unless-stopped
    command: ["server"]
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_REDIS__PORT: "6379"
      TZ: ${TZ}
    # Bind Authentik UI to non-default host ports
    ports:
      - "${HOST_HTTP_PORT:-8085}:9000"    # HTTP
      - "${HOST_HTTPS_PORT:-8445}:9443"  # HTTPS
    volumes:
      - ak-media:/media
      - ak-templates:/templates
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.6.3
    restart: unless-stopped
    command: ["worker"]
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_REDIS__PORT: "6379"
      TZ: ${TZ}
    volumes:
      - ak-media:/media
      - ak-templates:/templates
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  ak-postgres:
  ak-redis:
  ak-media:
  ak-templates: