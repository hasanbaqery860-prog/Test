name: openedx-lms-urls
content: |
  # Import required modules
  from django.urls import re_path, path
  from django.shortcuts import redirect
  from django.conf import settings
  from django.http import HttpResponsePermanentRedirect
  import urllib.parse
  
  # FORCE DIRECT ZITADEL REDIRECT - NO MFE, NO FORMS
  def force_zitadel_redirect(request):
      """Bypass everything and go straight to Zitadel"""
      protocol = 'https' if request.is_secure() else 'http'
      host = request.get_host()
      next_url = request.GET.get('next', '/dashboard')
      
      # Build the complete SSO URL
      sso_url = f"{protocol}://{host}/auth/login/oidc/"
      if next_url:
          sso_url += f"?next={urllib.parse.quote(next_url)}"
      
      return HttpResponsePermanentRedirect(sso_url)
  
  # Override ALL authentication URLs
  auth_redirects = [
      re_path(r'^login/?$', force_zitadel_redirect, name='signin_user'),
      re_path(r'^register/?$', force_zitadel_redirect, name='register_user'),
      re_path(r'^signin/?$', force_zitadel_redirect, name='login'),
      re_path(r'^signup/?$', force_zitadel_redirect, name='register'),
      re_path(r'^auth/login/?$', force_zitadel_redirect, name='auth_login'),
      re_path(r'^create_account/?$', force_zitadel_redirect, name='create_account'),
      re_path(r'^user_api/v1/account/login_session/?$', force_zitadel_redirect, name='login_session'),
  ]
  
  # Prepend our redirects to catch everything first
  urlpatterns = auth_redirects + urlpatterns